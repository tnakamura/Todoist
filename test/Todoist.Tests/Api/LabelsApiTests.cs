using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using Todoist.Client;
using Todoist.Api;
// uncomment below to import models
//using Todoist.Models;

namespace Todoist.Test.Api
{
    /// <summary>
    ///  Class for testing LabelsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class LabelsApiTests : IDisposable
    {
        private LabelsApi instance;

        public LabelsApiTests()
        {
            instance = new LabelsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of LabelsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' LabelsApi
            //Assert.IsType<LabelsApi>(instance);
        }

        /// <summary>
        /// Test CreateLabel
        /// </summary>
        [Fact]
        public void CreateLabelTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xRequestId = null;
            //NewLabel newLabel = null;
            //var response = instance.CreateLabel(xRequestId, newLabel);
            //Assert.IsType<Label>(response);
        }

        /// <summary>
        /// Test DeleteLabel
        /// </summary>
        [Fact]
        public void DeleteLabelTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long labelId = null;
            //instance.DeleteLabel(labelId);
        }

        /// <summary>
        /// Test GetLabel
        /// </summary>
        [Fact]
        public void GetLabelTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long labelId = null;
            //var response = instance.GetLabel(labelId);
            //Assert.IsType<Label>(response);
        }

        /// <summary>
        /// Test GetLabels
        /// </summary>
        [Fact]
        public void GetLabelsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetLabels();
            //Assert.IsType<List<Label>>(response);
        }

        /// <summary>
        /// Test UpdateLabel
        /// </summary>
        [Fact]
        public void UpdateLabelTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long labelId = null;
            //string xRequestId = null;
            //LabelUpdate labelUpdate = null;
            //instance.UpdateLabel(labelId, xRequestId, labelUpdate);
        }
    }
}
