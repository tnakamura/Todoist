using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using Todoist.Client;
using Todoist.Api;
// uncomment below to import models
//using Todoist.Models;

namespace Todoist.Test.Api
{
    /// <summary>
    ///  Class for testing ProjectsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ProjectsApiTests : IDisposable
    {
        private ProjectsApi instance;

        public ProjectsApiTests()
        {
            instance = new ProjectsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ProjectsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ProjectsApi
            //Assert.IsType<ProjectsApi>(instance);
        }

        /// <summary>
        /// Test CreateProject
        /// </summary>
        [Fact]
        public void CreateProjectTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xRequestId = null;
            //NewProject newProject = null;
            //var response = instance.CreateProject(xRequestId, newProject);
            //Assert.IsType<Project>(response);
        }

        /// <summary>
        /// Test DeleteProject
        /// </summary>
        [Fact]
        public void DeleteProjectTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long projectId = null;
            //instance.DeleteProject(projectId);
        }

        /// <summary>
        /// Test GetCollaborators
        /// </summary>
        [Fact]
        public void GetCollaboratorsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long projectId = null;
            //var response = instance.GetCollaborators(projectId);
            //Assert.IsType<List<Collaborator>>(response);
        }

        /// <summary>
        /// Test GetProject
        /// </summary>
        [Fact]
        public void GetProjectTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long projectId = null;
            //var response = instance.GetProject(projectId);
            //Assert.IsType<Project>(response);
        }

        /// <summary>
        /// Test GetProjects
        /// </summary>
        [Fact]
        public void GetProjectsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetProjects();
            //Assert.IsType<List<Project>>(response);
        }

        /// <summary>
        /// Test UpdateProject
        /// </summary>
        [Fact]
        public void UpdateProjectTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long projectId = null;
            //string xRequestId = null;
            //ProjectUpdate projectUpdate = null;
            //instance.UpdateProject(projectId, xRequestId, projectUpdate);
        }
    }
}
